{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\joyal\\\\Downloads\\\\SignalClone\\\\screens\\\\ChatScreen.js\";\n\nimport React, { useLayoutEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Avatar } from \"react-native-elements\";\nimport { FontAwesome, Ionicons } from \"@expo/vector-icons\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport * as firebase from \"firebase\";\nimport { auth, db } from \"../firebase\";\n\nvar ChatScreen = function ChatScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: \"Chat\",\n      headerTitle: function headerTitle() {\n        var _messages$;\n\n        return React.createElement(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 9\n          }\n        }, React.createElement(Avatar, {\n          rounded: true,\n          source: {\n            uri: (_messages$ = messages[0]) == null ? void 0 : _messages$.data.photoURL\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }\n        }), React.createElement(Text, {\n          style: {\n            color: \"white\",\n            marginLeft: 10,\n            fontWeight: \"700\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }\n        }, route.params.chatName));\n      },\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          style: {\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            width: 80,\n            marginRight: 20\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 9\n          }\n        }, React.createElement(TouchableOpacity, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }\n        }, React.createElement(FontAwesome, {\n          name: \"video-camera\",\n          size: 24,\n          color: \"white\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }\n        })), React.createElement(TouchableOpacity, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }\n        }, React.createElement(Ionicons, {\n          name: \"call\",\n          size: 24,\n          color: \"white\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }\n        })));\n      }\n    });\n  }, [navigation, messages]);\n\n  var sendMessage = function sendMessage() {\n    Keyboard.dismiss();\n    db.collection(\"chats\").doc(route.params.id).collection(\"messages\").add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      message: input,\n      displayName: auth.currentUser.displayName,\n      email: auth.currentUser.email,\n      photoURL: auth.currentUser.photoURL\n    });\n    setInput(\"\");\n  };\n\n  useLayoutEffect(function () {\n    var unsubscribe = db.collection(\"chats\").doc(route.params.id).collection(\"messages\").orderBy(\"timestamp\", \"desc\").onSnapshot(function (snapshot) {\n      return setMessages(snapshot.docs.map(function (doc) {\n        return {\n          id: doc.id,\n          data: doc.data()\n        };\n      }));\n    });\n    return unsubscribe;\n  }, [route]);\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n    contentContainerStyle: {\n      paddingTop: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, messages.map(function (_ref2) {\n    var id = _ref2.id,\n        data = _ref2.data;\n    return data.email === auth.currentUser.email ? React.createElement(View, {\n      key: id,\n      style: styles.reciever,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, React.createElement(Avatar, {\n      position: \"absolute\",\n      rounded: true,\n      containerStyle: {\n        position: \"absolute\",\n        bottom: -15,\n        right: -5\n      },\n      bottom: -15,\n      right: -5,\n      size: 30,\n      source: {\n        uri: data.photoURL\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }), React.createElement(Text, {\n      style: styles.recieverText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, data.message)) : React.createElement(View, {\n      key: id,\n      style: styles.sender,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, React.createElement(Avatar, {\n      position: \"absolute\",\n      rounded: true,\n      containerStyle: {\n        position: \"absolute\",\n        bottom: -15,\n        left: -5\n      },\n      bottom: -15,\n      left: -5,\n      size: 30,\n      source: {\n        uri: data.photoURL\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }), React.createElement(Text, {\n      style: styles.senderText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, data.message), React.createElement(Text, {\n      style: styles.senderName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, data.displayName));\n  })), React.createElement(View, {\n    style: styles.footer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    value: input,\n    onChangeText: function onChangeText(text) {\n      return setInput(text);\n    },\n    onSubmitEditing: sendMessage,\n    placeholder: \"Signal message\",\n    style: styles.textInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: sendMessage,\n    activeOpacity: 0.5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, React.createElement(Ionicons, {\n    name: \"send\",\n    size: 24,\n    color: \"blue\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nexport default ChatScreen;\nvar styles = StyleSheet.create({\n  footer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: \"100%\",\n    padding: 15\n  },\n  container: {\n    flex: 1\n  },\n  textInput: {\n    bottom: 0,\n    height: 40,\n    flex: 1,\n    marginRight: 15,\n    backgroundColor: \"#ECECEC\",\n    padding: 10,\n    color: \"grey\",\n    borderRadius: 30\n  },\n  reciever: {\n    padding: 15,\n    backgroundColor: \"#ECECEC\",\n    alignSelf: \"flex-end\",\n    borderRadius: 20,\n    marginRight: 15,\n    marginBottom: 20,\n    maxWidth: \"80%\",\n    position: \"relative\"\n  },\n  sender: {\n    padding: 15,\n    backgroundColor: \"#2B68E6\",\n    alignSelf: \"flex-start\",\n    borderRadius: 20,\n    margin: 15,\n    position: \"relative\"\n  },\n  senderName: {\n    left: 10,\n    paddingRight: 10,\n    fontSize: 10,\n    color: \"white\"\n  },\n  senderText: {\n    color: \"white\",\n    fontWeight: \"500\",\n    marginLeft: 10,\n    marginBottom: 15\n  },\n  recieverText: {\n    color: \"black\",\n    fontWeight: \"500\",\n    marginLeft: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/joyal/Downloads/SignalClone/screens/ChatScreen.js"],"names":["React","useLayoutEffect","useState","Avatar","FontAwesome","Ionicons","firebase","auth","db","ChatScreen","navigation","route","input","setInput","messages","setMessages","setOptions","title","headerTitle","flexDirection","alignItems","uri","data","photoURL","color","marginLeft","fontWeight","params","chatName","headerRight","justifyContent","width","marginRight","sendMessage","Keyboard","dismiss","collection","doc","id","add","timestamp","firestore","FieldValue","serverTimestamp","message","displayName","currentUser","email","unsubscribe","orderBy","onSnapshot","snapshot","docs","map","flex","backgroundColor","styles","container","paddingTop","reciever","position","bottom","right","recieverText","sender","left","senderText","senderName","footer","text","textInput","StyleSheet","create","padding","height","borderRadius","alignSelf","marginBottom","maxWidth","margin","paddingRight","fontSize"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  ScrollView,\n  TouchableWithoutFeedback,\n  TextInput,\n  TouchableOpacity,\n  Text,\n  Keyboard,\n  View,\n} from \"react-native\";\nimport { Avatar } from \"react-native-elements\";\nimport { FontAwesome, Ionicons } from \"@expo/vector-icons\";\nimport { SafeAreaView } from \"react-native\";\nimport * as firebase from \"firebase\";\nimport { auth, db } from \"../firebase\";\n\nconst ChatScreen = ({ navigation, route }) => {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: \"Chat\",\n      headerTitle: () => (\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <Avatar\n            rounded\n            source={{\n              uri: messages[0]?.data.photoURL,\n            }}\n          />\n          <Text style={{ color: \"white\", marginLeft: 10, fontWeight: \"700\" }}>\n            {route.params.chatName}\n          </Text>\n        </View>\n      ),\n\n      headerRight: () => (\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            width: 80,\n            marginRight: 20,\n          }}\n        >\n          <TouchableOpacity>\n            <FontAwesome name=\"video-camera\" size={24} color=\"white\" />\n          </TouchableOpacity>\n          <TouchableOpacity>\n            <Ionicons name=\"call\" size={24} color=\"white\" />\n          </TouchableOpacity>\n        </View>\n      ),\n    });\n  }, [navigation, messages]);\n\n  const sendMessage = () => {\n    Keyboard.dismiss();\n    db.collection(\"chats\").doc(route.params.id).collection(\"messages\").add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      message: input,\n      displayName: auth.currentUser.displayName,\n      email: auth.currentUser.email,\n      photoURL: auth.currentUser.photoURL,\n    });\n    setInput(\"\");\n  };\n\n  useLayoutEffect(() => {\n    const unsubscribe = db\n      .collection(\"chats\")\n      .doc(route.params.id)\n      .collection(\"messages\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) =>\n        setMessages(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            data: doc.data(),\n          }))\n        )\n      );\n    return unsubscribe;\n  }, [route]);\n\n  return (\n    <SafeAreaView style={{ flex: 1, backgroundColor: \"white\" }}>\n      <View style={styles.container}>\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n          <>\n            <ScrollView contentContainerStyle={{ paddingTop: 15 }}>\n              {messages.map(({ id, data }) =>\n                data.email === auth.currentUser.email ? (\n                  <View key={id} style={styles.reciever}>\n                    <Avatar\n                      position=\"absolute\"\n                      rounded\n                      //web\n                      containerStyle={{\n                        position: \"absolute\",\n                        bottom: -15,\n                        right: -5,\n                      }}\n                      bottom={-15}\n                      right={-5}\n                      size={30}\n                      source={{ uri: data.photoURL }}\n                    />\n                    <Text style={styles.recieverText}>{data.message}</Text>\n                  </View>\n                ) : (\n                  <View key={id} style={styles.sender}>\n                    <Avatar\n                      position=\"absolute\"\n                      rounded\n                      //web\n                      containerStyle={{\n                        position: \"absolute\",\n                        bottom: -15,\n                        left: -5,\n                      }}\n                      bottom={-15}\n                      left={-5}\n                      size={30}\n                      source={{ uri: data.photoURL }}\n                    />\n                    <Text style={styles.senderText}>{data.message}</Text>\n                    <Text style={styles.senderName}>{data.displayName}</Text>\n                  </View>\n                )\n              )}\n            </ScrollView>\n\n            <View style={styles.footer}>\n              <TextInput\n                value={input}\n                onChangeText={(text) => setInput(text)}\n                onSubmitEditing={sendMessage}\n                placeholder=\"Signal message\"\n                style={styles.textInput}\n              />\n              <TouchableOpacity onPress={sendMessage} activeOpacity={0.5}>\n                <Ionicons name=\"send\" size={24} color=\"blue\" />\n              </TouchableOpacity>\n            </View>\n          </>\n        </TouchableWithoutFeedback>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default ChatScreen;\n\nconst styles = StyleSheet.create({\n  footer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: \"100%\",\n    padding: 15,\n  },\n  container: { flex: 1 },\n  textInput: {\n    bottom: 0,\n    height: 40,\n    flex: 1,\n    marginRight: 15,\n    backgroundColor: \"#ECECEC\",\n    padding: 10,\n    color: \"grey\",\n    borderRadius: 30,\n  },\n  reciever: {\n    padding: 15,\n    backgroundColor: \"#ECECEC\",\n    alignSelf: \"flex-end\",\n    borderRadius: 20,\n    marginRight: 15,\n    marginBottom: 20,\n    maxWidth: \"80%\",\n    position: \"relative\",\n  },\n  sender: {\n    padding: 15,\n    backgroundColor: \"#2B68E6\",\n    alignSelf: \"flex-start\",\n    borderRadius: 20,\n    margin: 15,\n    position: \"relative\",\n  },\n  senderName: {\n    left: 10,\n    paddingRight: 10,\n    fontSize: 10,\n    color: \"white\",\n  },\n  senderText: {\n    color: \"white\",\n    fontWeight: \"500\",\n    marginLeft: 10,\n    marginBottom: 15,\n  },\n  recieverText: {\n    color: \"black\",\n    fontWeight: \"500\",\n    marginLeft: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}